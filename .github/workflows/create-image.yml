name: Build and Publish Docker Image
on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-image:
    permissions: write-all
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TO_DEPLOY: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Generate Docker tags based on the following attributes
          tags: |
            type=sha
            latest
          labels: |
            maintainer=tiffany@slac.stanford.edu

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64/v8
          provenance: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Start Deployment
    runs-on: ubuntu-latest
    needs: create-image
    steps:
      - uses: Nastaliss/get-github-app-pat@v1
        id: githubAppAuth
        with:
          app-id: ${{ secrets.APP_ID }}
          app-installation-id: ${{ secrets.APP_INSTALLATION_ID }}
          app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - run: |
          for tag in $(echo "${{ needs.create-image.outputs.IMAGE_TO_DEPLOY }}" | sed "s/,/ /g")
                do
                  if [[ $tag =~ sha- ]]; then
                    IMAGE_SHA_TAG=$tag
                    break
                  fi
                done
                echo "Use image $IMAGE_SHA_TAG for deployment"
          gh workflow --repo eed-web-application/core-work-management-frontend-deployment run Deploy -f image="$IMAGE_SHA_TAG"
        env:
          GITHUB_TOKEN: ${{ steps.githubAppAuth.outputs.access-token }}
